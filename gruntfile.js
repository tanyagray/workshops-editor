/// <binding AfterBuild='default, develop' />
/*
This file in the main entry point for defining grunt tasks and using grunt plugins.
Click here to learn more. http://go.microsoft.com/fwlink/?LinkID=513275&clcid=0x409
*/
module.exports = function (grunt) {
    grunt.loadNpmTasks('grunt-contrib-uglify');
    grunt.loadNpmTasks('grunt-contrib-watch');
    grunt.loadNpmTasks('grunt-angular-templates');
    grunt.loadNpmTasks('grunt-contrib-sass');
    grunt.loadNpmTasks('grunt-contrib-concat');
    grunt.loadNpmTasks('grunt-contrib-copy');
    grunt.loadNpmTasks('gruntify-eslint');

    grunt.initConfig({
        uglify: {
            develop: {
                options: {
                    width: 80,
                    beautify: true
                },
                files: {
                    'dist/app.min.js': [
                        'src/app/scripts/app.module.js',
                        'src/app/scripts/app.templates.js', 
                        'src/app/scripts/app.*.js', 
                        'src/app/scripts/**/*.module.js', 
                        'src/app/scripts/**/*.js'
                    ] }
            },
            production: {
                files: { 'dist/app.min.js': [
                            'src/app/scripts/app.module.js', 
                            'src/app/scripts/app.templates.js', 
                            'src/app/scripts/app.*.js', 
                            'src/app/scripts/**/*.module.js', 
                            'src/app/scripts/**/*.js'
                        ]}
            }
        },

        watch: {
            scripts: {
                files: [
                    'package.json',
                    'src/**/*.*'
                ],
                tasks: ['develop']
            }
        },

        eslint: {
            src: ['src/app/scripts/**/*.js'],
            options: {
                config: '.eslintrc'
            }
        },

        ngtemplates: {
            'angular-app': {
                src: 'src/app/scripts/**/*.tpl.html',
                dest: 'src/app/scripts/app.templates.js',
                options: {
                    prefix: '/',
                    bootstrap: function (module, script) {
                        return '/**********************\r\n' +
                            '* This file is automatically generated by "ngtemplates" via Grunt\r\n* This will cache all templates (.tpl.html files) so they are preloaded,\r\n*\r\n* DO NOT UPDATE MANUALLY\r\n*\r\n ' +
                            ' **********************/\r\n\r\n' +
                            '(function () {\r\n\r\n' +
                            'angular.module(\'' + module + '\').run([\'$templateCache\', function($templateCache) {' + script + '}]);\r\n\r\n' +
                            '})();\r\n';
                    }
                }
            }
        },

        sass: {
            develop: {
              files: {
                'dist/style.min.css': 'src/app/assets/sass/style.scss'
              },
              options: {
                loadPath: 'src/app/assets/sass/'
              }
            },
            production: {
              files: {
                'dist/style.min.css': 'src/app/assets/sass/style.scss'
              }
            }
        },

        /*
        Create a single JS file for all scripts from external libraries,
        and a single CSS file for all styles from external libraries.
        */
        concat: {
            develop: {
                files: {
                    'dist/libs.min.js': [
                        'bower_components/angular/angular.js',
                        'bower_components/angular-route/angular-route.js',
                        'bower_components/angular-animate/angular-animate.js',
                        'bower_components/angular-aria/angular-aria.js',
                        'bower_components/angular-messages/angular-messages.js',
                        'bower_components/angular-material/angular-material.js'
                    ],
                    'dist/libs.min.css': [
                        'bower_components/angular-material/angular-material.min.css'
                    ]
                }
            },
            production: {
                files: {
                    'dist/libs.min.js': [
                        'bower_components/angular/angular.min.js',
                        'bower_components/angular-route/angular-route.min.js',
                        'bower_components/angular-animate/angular-animate.min.js',
                        'bower_components/angular-aria/angular-aria.min.js',
                        'bower_components/angular-messages/angular-messages.min.js',
                        'bower_components/angular-material/angular-material.min.js'
                    ],
                    'dist/libs.min.css': [
                        'bower_components/angular-material/angular-material.min.css'
                    ]
                }
            }
        },

        copy: {
            main: {
                expand: true,
                flatten: true,
                src: [
                    'src/app/index.html', 
                    'package.json',
                    'src/app/main.js'],
                dest: 'dist/'
            }
        }


    });

    /*
    Running `grunt default` from the terminal
    will execute these grunt subtasks in order.
    */
    grunt.registerTask('default', [
        'eslint', 
        'ngtemplates', 
        'uglify:production', 
        'sass:production', 
        'concat:production', 
        'copy:main'
    ]);

    /*
    Running `grunt develop` from the terminal
    will execute these grunt subtasks in order.
    */
    grunt.registerTask('develop', [
        'eslint', 
        'ngtemplates', 
        'uglify:develop', 
        'sass:develop', 
        'concat:develop', 
        'copy:main'
    ]);

};